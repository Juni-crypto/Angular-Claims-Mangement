{
    "pipes": [],
    "interfaces": [
        {
            "name": "BillDetail",
            "id": "interface-BillDetail-a29f3ec9e3110d04a92ff37166864824",
            "file": "src/app/model/bill-detail.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BillDetail{\n    memberId:string;\n    policyId:string;\n}",
            "properties": [
                {
                    "name": "memberId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "policyId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "BillDetailResult",
            "id": "interface-BillDetailResult-b110efae89265f0db29f49c99260ab40",
            "file": "src/app/model/bill-detail-result.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BillDetailResult {\n    memberPolicyId:number;\n    memberId:string;\n\tpolicyId:string;\n\tlastPremiumDate:Date;\n\tpremiumAmtDue:number;\n\tlastPaymentInfo:string;\n\tdueDate:Date;\n}",
            "properties": [
                {
                    "name": "dueDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "lastPaymentInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "lastPremiumDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "memberId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "memberPolicyId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "policyId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "premiumAmtDue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "ClaimStatus",
            "id": "interface-ClaimStatus-049f02608345763c39cfbf007487e7f3",
            "file": "src/app/model/claim-status.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ClaimStatus{\n    claimStatus:string;\n    claimDesc:string;\n}",
            "properties": [
                {
                    "name": "claimDesc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "claimStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "ClaimStatusResult",
            "id": "interface-ClaimStatusResult-7c72046642f516a7d779af6fcab2688a",
            "file": "src/app/model/claim-status-result.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ClaimStatusResult{\n    claimId:number;\n    memberId:string;\n    claimStatus:string;\n    claimDesc:string;\n}",
            "properties": [
                {
                    "name": "claimDesc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "claimId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "claimStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "memberId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "MemberSubmitClaim",
            "id": "interface-MemberSubmitClaim-cdf46b8f0739bd4f58d47bdf5cc1f7ae",
            "file": "src/app/model/member-submit-claim.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface MemberSubmitClaim {\n    claimsId:number;\n    policyId:string;\n    memberId:string;\n    hospitalId:string;\n    totalBill:number;\n    totalClaimedAmt:number;\n}\n",
            "properties": [
                {
                    "name": "claimsId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "hospitalId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "memberId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "policyId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "totalBill",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "totalClaimedAmt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "PolicyResult",
            "id": "interface-PolicyResult-36c7d1983944e5042e3f104bfc495933",
            "file": "src/app/model/policy-result.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PolicyResult{\n    providerName:string;\n    location:string;\n}",
            "properties": [
                {
                    "name": "location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "providerName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AuthenticationService",
            "id": "injectable-AuthenticationService-58cfe9d7f4e23f4ceceaed8f42ac1ce3",
            "file": "src/app/service/authentication.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "authenticate",
                    "args": [
                        {
                            "name": "username",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "username",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isUserLoggedIn",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\nimport { UserLoginCredential } from './../model/user-login-credential';\n\nexport class User {\n  constructor(public status: string) {}\n}\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthenticationService {\n  constructor(private httpClient: HttpClient) {}\n// Provide username and password for authentication, and once authentication is successful, \n//store JWT token in session\n  authenticate(username, password) {\n    let userlogin:UserLoginCredential={\n      username:username,\n      password:password\n    };\n    return this.httpClient\n      .post<any>(\"http://localhost:8089/api/auth/login\", userlogin)\n      .pipe(\n        map(userData => {\n            sessionStorage.setItem(\"username\", username);\n            let tokenStr = userData.authToken;\n            sessionStorage.setItem(\"token\", tokenStr);\n            return userData;\n        })\n      );\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(\"username\");\n    return !(user === null);\n  }\n\n  logOut() {\n    sessionStorage.removeItem(\"username\");\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "HttpClientService",
            "id": "injectable-HttpClientService-1453bddc3d40fe6a6cb90a701ed02215",
            "file": "src/app/service/httpclient.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "createEmployee",
                    "args": [
                        {
                            "name": "employee",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "employee",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteEmployee",
                    "args": [
                        {
                            "name": "employee",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "employee",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getEmployees",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\nexport class Employee {\n  constructor(\n    public empId: string,\n    public name: string,\n    public designation: string,\n    public salary: string\n  ) {}\n}\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class HttpClientService {\n  constructor(private httpClient: HttpClient) {}\n\n  getEmployees() {\n    return this.httpClient.get<Employee[]>(\"http://localhost:8080/employees\");\n  }\n\n  public deleteEmployee(employee) {\n    return this.httpClient.delete<Employee>(\n      \"http://localhost:8080/employees\" + \"/\" + employee.empId\n    );\n  }\n\n  public createEmployee(employee) {\n    return this.httpClient.post<Employee>(\n      \"http://localhost:8080/employees\",\n      employee\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "MemberService",
            "id": "injectable-MemberService-fbf63283a9fced1f2b9a07b5da4fa7ab",
            "file": "src/app/service/member.service.ts",
            "properties": [
                {
                    "name": "BASE_URL",
                    "defaultValue": "\"http://localhost:8081\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "BASE_URL1",
                    "defaultValue": "\"http://localhost:8083\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methods": [
                {
                    "name": "getBillDetails",
                    "args": [
                        {
                            "name": "billDetail",
                            "type": "BillDetail",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "billDetail",
                            "type": "BillDetail",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getClaimStatus",
                    "args": [
                        {
                            "name": "memberSubmitClaim",
                            "type": "MemberSubmitClaim",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "memberSubmitClaim",
                            "type": "MemberSubmitClaim",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProviderDetails",
                    "args": [
                        {
                            "name": "policyId",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "policyId",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "submitMemberClaim",
                    "args": [
                        {
                            "name": "memberSubmitClaim",
                            "type": "MemberSubmitClaim",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "memberSubmitClaim",
                            "type": "MemberSubmitClaim",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from \"rxjs/operators\";\nimport { ClaimStatus } from '../model/claim-status';\nimport { MemberSubmitClaim } from './../model/member-submit-claim';\nimport { ClaimStatusResult } from './../model/claim-status-result';\nimport { BillDetail } from './../model/bill-detail';\nimport { BillDetailResult } from './../model/bill-detail-result';\nimport { PolicyResult } from '../model/policy-result';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MemberService {\n  BASE_URL=\"http://localhost:8081\";\n  BASE_URL1=\"http://localhost:8083\";\n  constructor(private httpClient: HttpClient) {}\n\n  public submitMemberClaim(memberSubmitClaim:MemberSubmitClaim):Observable<any>{\n    return this.httpClient.post<MemberSubmitClaim>(\n      this.BASE_URL+\"/submitclaim\",memberSubmitClaim\n    ).pipe(\n      map((data) => {\n        //You can perform some transformation here\n       return data;\n     }));\n\n  }\n  public getClaimStatus(memberSubmitClaim:MemberSubmitClaim):Observable<any>{\n    return this.httpClient.get<ClaimStatusResult>(\n      this.BASE_URL+\"/getClaimStatus/\"+memberSubmitClaim.claimsId+\"/\"+memberSubmitClaim.policyId+\"/\"+memberSubmitClaim.memberId\n    );\n  }\n  public getBillDetails(billDetail:BillDetail):Observable<any>{\n    return this.httpClient.get<BillDetailResult[]>(\n      this.BASE_URL+\"/viewbill/\"+billDetail.memberId+\"/\"+billDetail.policyId\n    );\n  }\n  public getProviderDetails(policyId):Observable<any>{\n    return this.httpClient.get<PolicyResult[]>(\n      this.BASE_URL1+\"/getChainOfProviders/\"+policyId\n    );\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthGaurdService",
            "id": "injectable-AuthGaurdService-a8ac68126db33de82138ecf8d287831f",
            "file": "src/app/service/auth-gaurd.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGaurdService implements CanActivate {\n\n  constructor(private router: Router,\n    private authService: AuthenticationService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authService.isUserLoggedIn())\n      return true;\n\n    this.router.navigate(['login']);\n    return false;\n\n  }\n\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [
        {
            "name": "BasicAuthHtppInterceptorService",
            "id": "injectable-BasicAuthHtppInterceptorService-3812f148e6f82be3080fc9e9a0f575b0",
            "file": "src/app/service/basic-auth-interceptor.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BasicAuthHtppInterceptorService implements HttpInterceptor {\n\n  constructor() { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n\n    if (sessionStorage.getItem('username') && sessionStorage.getItem('token')) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: sessionStorage.getItem('token'),\n          Accept: 'application/json',\n        }\n      })\n    }\n    return next.handle(req);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "type": "interceptor"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-4ee91dad524760153d3c0f6f0014153c",
            "file": "e2e/src/app.po.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get(browser.baseUrl) as Promise<any>;\n  }\n\n  getTitleText() {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Employee",
            "id": "class-Employee-1453bddc3d40fe6a6cb90a701ed02215",
            "file": "src/app/service/httpclient.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\nexport class Employee {\n  constructor(\n    public empId: string,\n    public name: string,\n    public designation: string,\n    public salary: string\n  ) {}\n}\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class HttpClientService {\n  constructor(private httpClient: HttpClient) {}\n\n  getEmployees() {\n    return this.httpClient.get<Employee[]>(\"http://localhost:8080/employees\");\n  }\n\n  public deleteEmployee(employee) {\n    return this.httpClient.delete<Employee>(\n      \"http://localhost:8080/employees\" + \"/\" + employee.empId\n    );\n  }\n\n  public createEmployee(employee) {\n    return this.httpClient.post<Employee>(\n      \"http://localhost:8080/employees\",\n      employee\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "empId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "designation",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "salary",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "empId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "designation",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "salary",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "designation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "empId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "salary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "User",
            "id": "class-User-58cfe9d7f4e23f4ceceaed8f42ac1ce3",
            "file": "src/app/service/authentication.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\nimport { UserLoginCredential } from './../model/user-login-credential';\n\nexport class User {\n  constructor(public status: string) {}\n}\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthenticationService {\n  constructor(private httpClient: HttpClient) {}\n// Provide username and password for authentication, and once authentication is successful, \n//store JWT token in session\n  authenticate(username, password) {\n    let userlogin:UserLoginCredential={\n      username:username,\n      password:password\n    };\n    return this.httpClient\n      .post<any>(\"http://localhost:8089/api/auth/login\", userlogin)\n      .pipe(\n        map(userData => {\n            sessionStorage.setItem(\"username\", username);\n            let tokenStr = userData.authToken;\n            sessionStorage.setItem(\"token\", tokenStr);\n            return userData;\n        })\n      );\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(\"username\");\n    return !(user === null);\n  }\n\n  logOut() {\n    sessionStorage.removeItem(\"username\");\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "status",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "status",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UserLoginCredential",
            "id": "class-UserLoginCredential-8d586874325f6513473423e8cc49fc7d",
            "file": "src/app/model/user-login-credential.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class UserLoginCredential {\n    username: string;\n    password:string;\n}\n",
            "properties": [
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AboutPageComponent",
            "id": "component-AboutPageComponent-ff6c008835f5cae7b9492babc45b8663",
            "file": "src/app/component/about-page/about-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-about-page",
            "styleUrls": [
                "./about-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./about-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-page',\n  templateUrl: './about-page.component.html',\n  styleUrls: ['./about-page.component.scss']\n})\nexport class AboutPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "*{\n    margin:0;\n}\n.banner {\n\t\n    height: 89.7vh;\n\tbackground:url(src\\assets\\images\\wave.png);\n\tbackground-color: white;\n\tbackground-size: contain;\n    background-position: left;\n    background-repeat: no-repeat;\n\tcolor:\t#414a4c;\n    align-items: center;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.center-card{\n    width: 97%;\n    text-align: center;\n    color: rgba(255, 250, 250, 0.548);\n}\n.example-card {\n    max-width: min-content;\n    display: block;\n    text-align: center;\n}\n.btn-right{\n    display: flex;\n    direction: rtl;\n}\n.form-card{\n    width: 50%;\n    background-color:#f4fffd;\n}\n.example-container {\n    display: flex;\n    flex-direction: column;\n  }\n  \n.example-container > * {\nwidth: 100%;\n}",
                    "styleUrl": "./about-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"banner\">\n    <mat-card class=\"center-card\">\n        <h2>ABOUT US</h2>\n    </mat-card>\n    <br>\n    <mat-card class=\"form-card\">\n            <div class=\"example-container\">\n                <blockquote class=\"blockquote\">\n\t\t\t\t\t<p>Health insurance is a type of insurance that covers the\n\t\t\t\t\t\twhole or a part of the risk of a person incurring medical\n\t\t\t\t\t\texpenses. As with other types of insurance is risk among many\n\t\t\t\t\t\tindividuals. By estimating the overall risk of health risk and\n\t\t\t\t\t\thealth system expenses over the risk pool, an insurer can develop\n\t\t\t\t\t\ta routine finance structure, such as a monthly premium to provide\n\t\t\t\t\t\tthe money to pay for the health care benefits specified in the\n\t\t\t\t\t\tinsurance agreement.The benefit is administered by a central\n\t\t\t\t\t\torganization, such as a government agency, private business, or\n\t\t\t\t\t\tnot-for-profit entity.</p>\n\t\t\t\t</blockquote>\n                \n            </div>\n            <div>\n                <span  > \n                    <button class=\"mat-raised-button mat-accent text-white\" routerLink=\"/memberHome\" style=\"margin-right: 14px;\">Member Portal</button>\n                </span>\n            </div>\n    </mat-card>\n</section>"
        },
        {
            "name": "AddEmployeeComponent",
            "id": "component-AddEmployeeComponent-dd789bb5ff8ec5bbbdd0dc42687b3080",
            "file": "src/app/add-employee/add-employee.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-add-employee",
            "styleUrls": [
                "./add-employee.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./add-employee.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "new Employee(\"\", \"\", \"\", \"\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Employee",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "createEmployee",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from \"@angular/core\";\nimport { HttpClientService, Employee } from \"../service/httpclient.service\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: \"app-add-employee\",\n  templateUrl: \"./add-employee.component.html\",\n  styleUrls: [\"./add-employee.component.css\"]\n})\nexport class AddEmployeeComponent implements OnInit {\n  user: Employee = new Employee(\"\", \"\", \"\", \"\");\n\n  constructor(private httpClientService: HttpClientService,\n    private router: Router) {}\n\n  ngOnInit() {}\n\n  createEmployee(): void {\n    console.debug(this.user);\n    this.httpClientService.createEmployee(this.user).subscribe(data => {\n      alert(\"Employee created successfully.\");\n      this.router.navigate([''])\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./add-employee.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClientService",
                        "type": "HttpClientService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "httpClientService",
                        "type": "HttpClientService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card class=\"example-card\">\n    <mat-card-header>\n        <mat-card-title>Add Employee</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <form class=\"example-form\">\n            <table class=\"example-full-width\" cellspacing=\"0\">\n                <tr>\n                    <td>\n                        <mat-form-field class=\"example-full-width\">\n                            <input matInput placeholder=\"Username\" [(ngModel)]=\"user.name\" name=\"name\" required>\n                        </mat-form-field>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <mat-form-field class=\"example-full-width\">\n                            <input matInput placeholder=\"Designation\" [(ngModel)]=\"user.designation\" name=\"designation\" required>\n                        </mat-form-field>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <mat-form-field class=\"example-full-width\">\n                            <input matInput placeholder=\"Employee Id\" [(ngModel)]=\"user.empId\" name=\"employeeid\" required>\n                        </mat-form-field>\n                    </td>\n                </tr>\n            </table>\n        </form>\n        <mat-spinner [style.display]=\"showSpinner ? 'block' : 'none'\"></mat-spinner>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-raised-button (click)=\"createEmployee()\" color=\"primary\">Create</button>\n    </mat-card-actions>\n</mat-card>\n\n\n<!-- \n<div class=\"col-md-6\">\n    <h2 class=\"text-center\">Add Employee</h2>\n    <form>\n        <div class=\"form-group\">\n            <label for=\"name\">Name:</label>\n            <input type=\"name\" [(ngModel)]=\"user.name\" placeholder=\"Name\" name=\"name\" class=\"form-control\" id=\"name\">\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"designation\">Designation:</label>\n            <input [(ngModel)]=\"user.designation\" placeholder=\"Designation\" name=\"designation\" class=\"form-control\" id=\"designation\">\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"empId\">Employee Id</label>\n            <input [(ngModel)]=\"user.empId\" placeholder=\"Employee Id\" name=\"Employee Id\" class=\"form-control\" id=\"employeeid\">\n        </div>\n\n        <button class=\"btn btn-success\" (click)=\"createEmployee()\">Create</button>\n    </form>\n</div> -->"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-fa4b6565f8b404fd836fe348c405d1fb",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'angular-jwt'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-jwt';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-642c6c4e474cd5a0ac760dfda26b2fc9",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "What background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 317,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "Button contents",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "How large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "ClaimDialogComponent",
            "id": "component-ClaimDialogComponent-2a6b4d3b8fa985d84637f443e916d1b7",
            "file": "src/app/component/submit-claim/claim-dialog/claim-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-claim-dialog",
            "styleUrls": [
                "./claim-dialog.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./claim-dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<ClaimDialogComponent>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onOkClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-claim-dialog',\n  templateUrl: './claim-dialog.component.html',\n  styleUrls: ['./claim-dialog.component.css']\n})\nexport class ClaimDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<ClaimDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,public router:Router) { }\n\n  onOkClick(): void {\n    this.dialogRef.close();\n    this.router.navigate([\"/memberHome\"]);\n  }\n\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-right{\n    display: flex;\n    direction: rtl;\n}",
                    "styleUrl": "./claim-dialog.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<ClaimDialogComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<ClaimDialogComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"dialog\">\n<h1 mat-dialog-title>Claims Submission</h1>\n<div mat-dialog-content>\n  <p>Your Claim Request has been Submitted Successfully.</p>\n  <p>Your Claim ID is {{ data.claimsId }}.</p>\n</div>\n<div mat-dialog-actions class=\"btn-right\">\n  <button mat-button (click)=\"onOkClick()\"  cdkFocusInitial>Back to Member Portal</button>\n</div>\n</div>\n "
        },
        {
            "name": "EmployeeComponent",
            "id": "component-EmployeeComponent-7426e1964fb367fa6818524fb38e951d",
            "file": "src/app/employee/employee.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-employee",
            "styleUrls": [
                "./employee.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./employee.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\"name\", \"designation\", \"delete\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "employees",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Employee[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteEmployee",
                    "args": [
                        {
                            "name": "employee",
                            "type": "Employee",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "employee",
                            "type": "Employee",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSuccessfulResponse",
                    "args": [
                        {
                            "name": "response",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "response",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from \"@angular/core\";\nimport { HttpClientService, Employee } from \"../service/httpclient.service\";\n\n@Component({\n  selector: \"app-employee\",\n  templateUrl: \"./employee.component.html\",\n  styleUrls: [\"./employee.component.css\"]\n})\nexport class EmployeeComponent implements OnInit {\n  employees: Employee[];\n  displayedColumns: string[] = [\"name\", \"designation\", \"delete\"];\n\n  constructor(private httpClientService: HttpClientService) {}\n\n  ngOnInit() {\n    this.httpClientService\n      .getEmployees()\n      .subscribe(response => this.handleSuccessfulResponse(response));\n  }\n\n  handleSuccessfulResponse(response) {\n    this.employees = response;\n  }\n\n  deleteEmployee(employee: Employee): void {\n    this.httpClientService.deleteEmployee(employee).subscribe(data => {\n      this.employees = this.employees.filter(u => u !== employee);\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "table {\n    width: 100%;\n}",
                    "styleUrl": "./employee.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClientService",
                        "type": "HttpClientService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "httpClientService",
                        "type": "HttpClientService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<table mat-table [dataSource]=\"employees\" class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef> Name </th>\n        <td mat-cell *matCellDef=\"let employee\"> {{employee.name}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"designation\">\n        <th mat-header-cell *matHeaderCellDef> Designation </th>\n        <td mat-cell *matCellDef=\"let employee\"> {{employee.designation}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"delete\">\n        <th mat-header-cell *matHeaderCellDef> Action </th>\n        <td mat-cell *matCellDef=\"let employee\"><button class=\"btn btn-danger\" (click)=\"deleteEmployee(employee)\"> Delete Employee</button> </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-1eb8c1f421545b99a234bc8ed489fd43",
            "file": "src/app/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./footer.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".footer {\n    position: fixed;\n    bottom: 0;\n    height: 10px;\n    width: 99%;\n    text-align: center;\n}",
                    "styleUrl": "./footer.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card class=\"footer\">\n</mat-card>\n<mat-card class=\"footer\">\n    <span style=\"font-size: smaller;text-align: center;\">    Claims Management System </span>\n</mat-card>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-246e2a69dc126a3bd76c6328dd3b93e2",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": ""
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-6ad560436eb8da2a8ba8f55c4f9e9496-1",
            "file": "src/app/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../service/authentication.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private loginService:AuthenticationService){ }\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-spacer {\n    flex: 1 1 auto;\n}",
                    "styleUrl": "./header.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "loginService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "loginService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<mat-toolbar color=\"primary\" style=\"min-height: 50px !important; height: 50px !important; position: relative; z-index: 5;\">\n    <mat-toolbar-row >\n        <span><a mat-button routerLink=\"/home\" style=\"font-size: large\"><span>Claims Management Portal</span></a></span>\n        <span class=\"example-fill-remaining-space\"></span>\n        <span class=\"align-center\"></span>\n        <span class=\"example-spacer\"></span>\n        <a mat-button routerLink=\"/home\" class=\"nav-link\"> <mat-icon>home</mat-icon></a>\n        <a mat-button *ngIf=\"!loginService.isUserLoggedIn()\" routerLink=\"/\" class=\"nav-link\">LOGIN</a>\n        <a mat-button *ngIf=\"loginService.isUserLoggedIn()\" routerLink=\"/logout\" class=\"nav-link\">LOGOUT</a>\n        <a mat-button routerLink=\"/aboutus\" class=\"nav-link\">ABOUT US</a>\n    </mat-toolbar-row>\n</mat-toolbar>"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-000c509243b37b4587a152f24a0c2321",
            "file": "src/app/component/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".banner {\n\t\n    height: 89.7vh;\n\tbackground:url(src\\assets\\images\\wave.png);\n\tbackground-color: white;\n\tbackground-size: contain;\n    background-position: left;\n    background-repeat: no-repeat;\n\tcolor:\t#414a4c;\n}\nbutton{\n    width:200px;\n}\n.example-card {\n    margin: auto;\n    max-width: min-content;\n    display: block;\n    text-align: center;\n}\n.text-center{\n    text-align: center;\n    padding-left: 20%;\n    padding-top: 15%;\n}",
                    "styleUrl": "./home.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"banner d-flex justify-content-center align-items-center\">\n    <div class=\"text-center\">\n        <h1>Claims Management System</h1>\n        <p>Manage all your Claims and Settlements all in one Place.</p>\n        <mat-card class=\"example-card\">\n            <button routerLink=\"/memberHome\"  class=\"mat-raised-button mat-primary text-white\">Member Portal</button>\n        </mat-card>\n    </div>\n</section>"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-095de2b99bd4fd2b77396bc3424ed20e",
            "file": "src/app/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hasError",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "invalidLogin",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "password",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "username",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "checkLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../service/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username = ''\n  password = ''\n  invalidLogin = false;\n  hasError: boolean = false;\n  message:string| null;\n\n  constructor(private router: Router,\n    private loginservice: AuthenticationService) { }\n\n  ngOnInit() {\n    const inputs = document.querySelectorAll(\".input\");\n\t\tfunction addcl() {\n\t\t\tlet parent = this.parentNode.parentNode;\n\t\t\tparent.classList.add(\"focus\");\n\t\t}\n\t\tfunction remcl() {\n\t\t\tlet parent = this.parentNode.parentNode;\n\t\t\tif (this.value == \"\") {\n\t\t\t\tparent.classList.remove(\"focus\");\n\t\t\t}\n\t\t}\n\t\tinputs.forEach(input => {\n\t\t\tinput.addEventListener(\"focus\", addcl);\n\t\t\tinput.addEventListener(\"blur\", remcl);\n\t\t});\n  }\n\n  checkLogin() {\n    if(this.username==='' || this.password===''){\n      this.hasError=true;\n      this.message=\"fill username and password fields\";\n      return;\n    }\n    else{\n      this.hasError=true;\n      this.message=null;\n    }\n    (this.loginservice.authenticate(this.username, this.password).subscribe(\n      data => {\n\n        this.router.navigate([''])\n        this.invalidLogin = false\n      },\n      error => {\n        this.invalidLogin = true\n        console.log(error);\n        if(error.status==0){\n          this.hasError=true;\n          this.message = \"Internal Server Error. Try again later\";\n        }\n        if(error.status==401){\n          this.hasError=true;\n          this.message = \"Invalid Credentials\";\n        }\n      }\n    )\n    );\n\n  }\n\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n    display: flex;\n    justify-content: center;\n    margin: 100px 0px;\n}\n*{\n\tpadding: 0;\n\tmargin: 0;\n\tbox-sizing: border-box;\n}\n\n.wave{\n\tposition: fixed;\n\tbottom: 0;\n\tleft: 0;\n\theight: 100%;\n\tz-index: -1;\n}\n\n.container{\n    width: 100vw;\n    height: 100vh;\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap :7rem;\n    padding: 0 0rem;\n}\n\n.img{\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\talign-items: center;\n}\n\n.login-content{\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\ttext-align: center;\n}\n\n.img img{\n\twidth: 500px;\n}\n\nform{\n\twidth: 360px;\n}\n\n.login-content img{\n    height: 100px;\n}\n\n.login-content h2{\n\tmargin: 15px 0;\n\tcolor: #333;\n\ttext-transform: uppercase;\n\tfont-size: 2.1rem;\n}\n\n.login-content .input-div{\n\tposition: relative;\n    display: grid;\n    grid-template-columns: 7% 93%;\n    margin: 25px 0;\n    padding: 5px 0;\n    border-bottom: 2px solid #d9d9d9;\n}\n\n.login-content .input-div.one{\n\tmargin-top: 0;\n}\n\n.i{\n\tcolor: #d9d9d9;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n}\n\n.i i{\n\ttransition: .3s;\n\t-webkit-transition: .3s;\n\t-moz-transition: .3s;\n\t-ms-transition: .3s;\n\t-o-transition: .3s;\n}\n\n.input-div > div{\n    position: relative;\n\theight: 45px;\n}\n\n.input-div > div > h5{\n\tposition: absolute;\n\tleft: 10px;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tcolor: #999;\n\tfont-size: 15px;\n\ttransition: .3s;\n\t-webkit-transform: translateY(-50%);\n\t-moz-transform: translateY(-50%);\n\t-ms-transform: translateY(-50%);\n\t-o-transform: translateY(-50%);\n}\n\n.input-div:before, .input-div:after{\n\tcontent: '';\n\tposition: absolute;\n\tbottom: -2px;\n\twidth: 0%;\n\theight: 2px;\n\tbackground-color: #38d39f;\n\ttransition: .4s;\n}\n\n.input-div:before{\n\tright: 50%;\n}\n\n.input-div:after{\n\tleft: 50%;\n}\n\n.input-div.focus:before, .input-div.focus:after{\n\twidth: 50%;\n}\n\n.input-div.focus > div > h5{\n\ttop: -5px;\n\tfont-size: 12px;\n}\n\n.input-div.focus > .i > i{\n\tcolor: #38d39f;\n}\n\n.input-div > div > input{\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\twidth: 100%;\n\theight: 100%;\n\tborder: none;\n\toutline: none;\n\tbackground: none;\n\tpadding: 0.5rem 0.7rem;\n\tfont-size: 1.2rem;\n\tcolor: #555;\n\tfont-family: 'poppins', sans-serif;\n}\n\n.input-div.pass{\n\tmargin-bottom: 4px;\n}\n\na{\n\tdisplay: block;\n\ttext-align: right;\n\ttext-decoration: none;\n\tcolor: #999;\n\tfont-size: 0.9rem;\n\ttransition: .3s;\n}\n.banner {\n\twidth: 100%;\n    height: 89.7vh;\n\tbackground:url(src\\assets\\images\\wave.png);\n\tbackground-color: white;\n\tbackground-size: contain;\n    background-position: left;\n    margin-left: 0;\n    background-repeat: no-repeat;\n\tcolor:\t#414a4c;\n    overflow: hidden;\n}\n.bg{\n    background:url(src\\assets\\images\\bg.svg);\n\tbackground-color: white;\n\tbackground-size: contain;\n    background-repeat: no-repeat;\n}\n.avatar{\n    background:url(src\\assets\\images\\avatar.svg);\n\tbackground-size: 50%;\n\tbackground-repeat: no-repeat;\n\tmargin-top: 15%;\n\tmargin-left: 15%;\n}\na:hover{\n\tcolor: #38d39f;\n}\n\n.btn{\n\tdisplay: block;\n\twidth: 100%;\n\theight: 50px;\n\tborder-radius: 25px;\n\toutline: none;\n\tborder: none;\n\tbackground-image: linear-gradient(to right, #32be8f, #38d39f, #32be8f);\n\tbackground-size: 200%;\n\tfont-size: 1.2rem;\n\tcolor: #000;\n\tfont-family: 'Poppins', sans-serif;\n\ttext-transform: uppercase;\n\tmargin: 1rem 0;\n\tcursor: pointer;\n\ttransition: .5s;\n}\n.btn:hover{\n\tbackground-position: right;\n\tcolor:#fff;\n}\n\n@media screen and (max-width: 1050px){\n\t.container{\n\t\tgrid-gap: 5rem;\n\t}\n}\n\n@media screen and (max-width: 1000px){\n\tform{\n\t\twidth: 290px;\n\t}\n\n\t.login-content h2{\n        font-size: 2.4rem;\n        margin: 8px 0;\n\t}\n\n\t.img img{\n\t\twidth: 400px;\n\t}\n}\n\n@media screen and (max-width: 900px){\n\t.container{\n\t\tgrid-template-columns: 1fr;\n\t}\n\n\t.img{\n\t\tdisplay: none;\n\t}\n\n\t.wave{\n\t\tdisplay: none;\n\t}\n\n\t.login-content{\n\t\tjustify-content: center;\n\t}\n}\n.error {\n\tmargin: auto;\n    padding: 10px;\n    width: 300px;\n    color: white;\n    background-color: red;\n}\n\n.button {\n    display: flex;\n    justify-content: flex-end;\n}",
                    "styleUrl": "./login.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loginservice",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loginservice",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- <div class=\"container\">\n    <div>\n        User Name : <input type=\"text\" name=\"username\" [(ngModel)]=\"username\"> Password : <input type=\"password\" name=\"password\" [(ngModel)]=\"password\">\n    </div>\n    <button (click)=checkLogin() class=\"btn btn-success\">\n    Login\n  </button>\n</div> -->\n<ng-container>\n    <div class=\"container banner\">\n        <div class=\"img avatar\">\n        </div>\n        <div class=\"login-content\">\n            <form>\n                <h2 class=\"title\">Member Login</h2>\n                <div class=\"input-div one\">\n                    <div class=\"i\">\n                        <i class=\"fas fa-user\"></i>\n                    </div>\n                    <div class=\"div\">\n                        <h5>Username</h5>\n                        <input type=\"text\" class=\"input\" name=\"username\" [(ngModel)]=\"username\" required>\n                    </div>\n                </div>\n                <div class=\"input-div pass\">\n                    <div class=\"i\">\n                        <i class=\"fas fa-lock\"></i>\n                    </div>\n                    <div class=\"div\">\n                        <h5>Password</h5>\n                        <input type=\"password\" class=\"input\" name=\"password\" [(ngModel)]=\"password\" required>\n                    </div>\n                </div>\n                <input type=\"submit\" class=\"btn mat-elevation-z5\" (click)=\"checkLogin()\" value=\"Login\">\n                <p *ngIf=\"hasError\" style=\"color: red; font-size: 15px; margin: auto;\" >\n                    {{ message }}\n                </p>\n            </form>\n           \n        </div>\n    </div>\n</ng-container>\n<!--\n<mat-card>\n    <mat-card-header>\n        <mat-card-title>Login</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <form>\n            <table class=\"example-full-width\" cellspacing=\"0\">\n                <tr>\n                    <td>\n                        <mat-form-field class=\"example-full-width\">\n                            <input matInput placeholder=\"Username\" [(ngModel)]=\"username\" name=\"username\" required>\n                        </mat-form-field>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <mat-form-field class=\"example-full-width\">\n                            <input matInput placeholder=\"Password\" [(ngModel)]=\"password\" type=\"password\" name=\"password\" required>\n                        </mat-form-field>\n                    </td>\n                </tr>\n                <p *ngIf=\"error\" class=\"error\">\n                    {{ error }}\n                </p>\n            </table>\n        </form>\n        <mat-spinner [style.display]=\"showSpinner ? 'block' : 'none'\"></mat-spinner>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-raised-button (click)=\"checkLogin()\" color=\"primary\">Login</button>\n    </mat-card-actions>\n</mat-card>\n-->"
        },
        {
            "name": "LogoutComponent",
            "id": "component-LogoutComponent-0dbbe2a6cfde8941b583900ecbe25a3f",
            "file": "src/app/logout/logout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-logout",
            "styleUrls": [
                "./logout.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./logout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(\n    private authentocationService: AuthenticationService,\n    private router: Router) {\n\n  }\n\n  ngOnInit() {\n    this.authentocationService.logOut();\n    this.router.navigate(['login']);\n  }\n\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./logout.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authentocationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "authentocationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>\n  logout works!\n</p>\n"
        },
        {
            "name": "MemberHomeComponent",
            "id": "component-MemberHomeComponent-7ea590319ef74c5d66038b877287516a",
            "file": "src/app/component/member-home/member-home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-member-home",
            "styleUrls": [
                "./member-home.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./member-home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MemberService } from './../../service/member.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-member-home',\n  templateUrl: './member-home.component.html',\n  styleUrls: ['./member-home.component.css']\n})\nexport class MemberHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "*{\n    margin:0;\n}\n.banner {\n\t\n    height: 89.7vh;\n\tbackground:url(src\\assets\\images\\wave.png);\n\tbackground-color: white;\n\tbackground-size: contain;\n    background-position: left;\n    background-repeat: no-repeat;\n\tcolor:\t#414a4c;\n}\nbutton{\n    width:200px;\n}\n.example-card {\n    max-width: min-content;\n    display: block;\n    text-align: center;\n}\n.center-card{\n    margin-top: 5%;\n    margin: auto;\n    max-width: 97%;\n    text-align: center;\n    color: rgba(0, 0, 0, 0.548);\n}\n.text-center{\n    border: #414a4c;\n    border-radius: 15px;\n    margin-top: 5%;\n    text-align: start;\n    margin-left: auto;\n    margin-right: auto;\n    width: 700px;\n    -webkit-border-radius: 15px;\n    -moz-border-radius: 15px;\n    -ms-border-radius: 15px;\n    -o-border-radius: 15px;\n}\n.example-container {\n    display: flex;\n    flex-direction: column;\n  }\n  \n",
                    "styleUrl": "./member-home.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"banner d-flex justify-content-center align-items-center\">\n    <mat-card class=\"center-card\">\n        <h1>Member Portal</h1>\n    </mat-card>\n    <div class=\"text-center\">\n        <mat-grid-list cols=\"2\" rowHeight=\"150px\">\n            <mat-grid-tile>\n                <mat-card class=\"example-card\">\n                    <button routerLink=\"/submitclaim\" class=\"mat-raised-button mat-accent text-white uppercase\">Submit Claim</button>\n                </mat-card> \n            </mat-grid-tile>\n            <mat-grid-tile>\n                <mat-card class=\"example-card\">\n                    <button routerLink=\"/viewclaimstatus\" class=\"mat-raised-button mat-accent text-white\">View Claim\n                        Status</button>\n                </mat-card>\n            </mat-grid-tile>\n            <mat-grid-tile>\n                <mat-card class=\"example-card\">\n                    <button routerLink=\"/viewbilldetails\" class=\"mat-raised-button mat-accent text-white\">View Bill\n                        Details</button>\n                </mat-card>\n            </mat-grid-tile>\n            <mat-grid-tile>\n                <mat-card class=\"example-card\">\n                    <button routerLink=\"/policyproviderdetails\" class=\"mat-raised-button mat-accent text-white\">Policy Provider\n                        Details</button>\n                </mat-card>\n            </mat-grid-tile>\n        </mat-grid-list>\n    </div>\n</section>"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-8f196770333aa216860a88c0b6b221aa",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": ""
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PolicyProviderDetailsComponent",
            "id": "component-PolicyProviderDetailsComponent-2ef1b289900d599150169bd2c5c663aa",
            "file": "src/app/component/policy-provider-details/policy-provider-details.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-policy-provider-details",
            "styleUrls": [
                "./policy-provider-details.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./policy-provider-details.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hasError",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "policyId",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submitPolicyId",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MemberService } from 'src/app/service/member.service';\nimport { PolicyResult } from './../../model/policy-result';\n\n@Component({\n  selector: 'app-policy-provider-details',\n  templateUrl: './policy-provider-details.component.html',\n  styleUrls: ['./policy-provider-details.component.scss']\n})\nexport class PolicyProviderDetailsComponent implements OnInit {\n\n  policyId:string=null;\n  hasError:boolean=false;\n  message:string|null;\n  constructor(private memberService: MemberService, private router: Router) { }\n\n  ngOnInit() {\n  }\n  submitPolicyId(): void {\n    if(this.policyId==null){\n        this.hasError=true;\n        this.message = \"fill all the fields *\";\n        return;\n      }\n      else{\n        this.hasError=false;\n      }\n    this.memberService.getProviderDetails(this.policyId).subscribe(response => {\n      let res:PolicyResult[]=response;\n      this.router.navigateByUrl('/policyproviderdetailsresult', { state: {data :res} } );\n    },error=>{\n      this.message=error.error.message;\n      this.hasError=true;\n    });\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "*{\n    margin:0;\n}\n.banner {\n\t\n    height: 89.7vh;\n\tbackground:url(src\\assets\\images\\wave.png);\n\tbackground-color: white;\n\tbackground-size: contain;\n    background-position: left;\n    background-repeat: no-repeat;\n\tcolor:\t#414a4c;\n    align-items: center;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.center-card{\n    width: 97%;\n    text-align: center;\n    color: rgba(0, 0, 0, 0.548);\n}\n.example-card {\n    max-width: min-content;\n    display: block;\n    text-align: center;\n}\n.btn-right{\n    float:right;\n}\n.form-card{\n    width: 50%;\n    background-color:#f7f7f7;\n}\n.example-container {\n    display: flex;\n    flex-direction: column;\n  }\n  \n.example-container > * {\nwidth: 100%;\n}",
                    "styleUrl": "./policy-provider-details.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "memberService",
                        "type": "MemberService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "memberService",
                        "type": "MemberService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"banner\">\n    <mat-card class=\"center-card\">\n        <h2>Submit your Policy ID</h2>\n    </mat-card>\n    <br>\n    <mat-card class=\"form-card\">\n            <div class=\"example-container\">\n                <mat-form-field>\n                    <input matInput placeholder=\"Enter the Policy Id\" [(ngModel)] =\"policyId\" required>\n                </mat-form-field>\n            </div>\n            <div>\n                <span> \n                    <span *ngIf=\"hasError\" style=\"font-size: 14px; color: red; display: inline; margin-right: 56%; text-transform: lowercase\">{{ message }}</span>\n                    <button class=\"mat-raised-button mat-accent text-white btn-right\" (click)=\"submitPolicyId()\">Submit</button>\n                    <button class=\"mat-raised-button mat-light text-white btn-right\" routerLink=\"/memberHome\" style=\"margin-right: 14px;\">Back</button>\n                </span>\n            </div>\n    </mat-card>\n</section>"
        },
        {
            "name": "PolicyProviderDetailsResultComponent",
            "id": "component-PolicyProviderDetailsResultComponent-a9b1b57274f9a27caba410e25ce5b480",
            "file": "src/app/component/policy-provider-details-result/policy-provider-details-result.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-policy-provider-details-result",
            "styleUrls": [
                "./policy-provider-details-result.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./policy-provider-details-result.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTableDataSource<PolicyResult>",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['providername', 'location']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "result",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PolicyResult[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\nimport { PolicyResult } from './../../model/policy-result';\n\n@Component({\n  selector: 'app-policy-provider-details-result',\n  templateUrl: './policy-provider-details-result.component.html',\n  styleUrls: ['./policy-provider-details-result.component.scss']\n})\nexport class PolicyProviderDetailsResultComponent implements OnInit {\n\n  public displayedColumns = ['providername', 'location'];\n  result:PolicyResult[]=[];\n  dataSource:MatTableDataSource<PolicyResult>;\n  constructor(){}\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<PolicyResult>(history.state.data);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".mat-table {\n    overflow: auto;\n    max-height: 400px;\n}\n  p {\n    font-family: Lato;\n  }\n\n*{\n    margin:0;\n}\n.banner {\n\t\n    height: 89.7vh;\n\tbackground:url(src\\assets\\images\\wave.png);\n\tbackground-color: white;\n\tbackground-size: contain;\n    background-position: left;\n    background-repeat: no-repeat;\n\tcolor:\t#414a4c;\n    align-items: center;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.center-card{\n    width: 97%;\n    text-align: center;\n    color: rgba(0, 0, 0, 0.548);\n}\n.example-card {\n    min-width: min-content;\n    display: block;\n    text-align: center;\n}\n.btn-right{\n    display: flex;\n    direction: rtl;\n}\n.form-card{\n    width: 50%;\n    background-color:#f7f7f7;\n}\n.example-container {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 25px;\n  }\n  \n.example-container > * {\n    width: 100%;\n}",
                    "styleUrl": "./policy-provider-details-result.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"banner\">\n    <mat-card class=\"center-card\">\n        <h2>Policy Provider Details</h2>\n    </mat-card>\n    <br>\n    <mat-card class=\"form-card\">\n            <div class=\"example-container mat-elevation-z2\">\n                <table mat-table #table [dataSource]=\"dataSource\">\n                    <ng-container matColumnDef=\"providername\">\n                        <th mat-header-cell *matHeaderCellDef> POLICY PROVIDER </th>\n                        <td mat-cell *matCellDef=\"let policyDetail\"> {{policyDetail.providerName}} </td>\n                    </ng-container>\n            \n                    <ng-container matColumnDef=\"location\">\n                        <th mat-header-cell *matHeaderCellDef> LOCATION </th>\n                        <td mat-cell *matCellDef=\"let policyDetail\"> {{policyDetail.location}} </td>\n                    </ng-container>\n        \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                </table>\n            </div>\n            <div>\n                <span  class=\"btn-right\"> \n                    <button class=\"mat-raised-button mat-accent text-white\" routerLink=\"/memberHome\">Member Portal</button>\n                    <button class=\"mat-raised-button mat-light text-white\" routerLink=\"/policyproviderdetails\" style=\"margin-right: 14px;\">Back</button>\n                </span>\n            </div>\n    </mat-card>\n</section>"
        },
        {
            "name": "SubmitClaimComponent",
            "id": "component-SubmitClaimComponent-7fc28b4cc06965c31489b13b081cb05b",
            "file": "src/app/component/submit-claim/submit-claim.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-submit-claim",
            "styleUrls": [
                "./submit-claim.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./submit-claim.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "hasError",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "memberSubmitClaim",
                    "defaultValue": "{\n    claimsId: null,\n    memberId: null,\n    policyId: null,\n    hospitalId: null,\n    totalClaimedAmt: null,\n    totalBill: null\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MemberSubmitClaim",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "str",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submitMemberClaim",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material';\nimport { MemberSubmitClaim } from './../../model/member-submit-claim';\nimport { MemberService } from './../../service/member.service';\nimport { ClaimDialogComponent } from './claim-dialog/claim-dialog.component';\n\n@Component({\n  selector: 'app-submit-claim',\n  templateUrl: './submit-claim.component.html',\n  styleUrls: ['./submit-claim.component.css']\n})\nexport class SubmitClaimComponent implements OnInit {\n\n  memberSubmitClaim: MemberSubmitClaim = {\n    claimsId: null,\n    memberId: null,\n    policyId: null,\n    hospitalId: null,\n    totalClaimedAmt: null,\n    totalBill: null\n  };\n  str: string = null;\n  hasError:boolean=false;\n  constructor(private memberService: MemberService, private router: Router, public dialog: MatDialog) { }\n\n  ngOnInit() {\n  }\n\n  submitMemberClaim(): void {\n    if(this.memberSubmitClaim.memberId==null || this.memberSubmitClaim.policyId==null ||\n      this.memberSubmitClaim.hospitalId==null || this.memberSubmitClaim.totalClaimedAmt==null ||\n      this.memberSubmitClaim.totalBill==null){\n        this.hasError=true;\n        return;\n      }\n      else{\n        this.hasError=false;\n      }\n    this.memberService.submitMemberClaim(this.memberSubmitClaim).subscribe(data => {\n      this.str = data.claimsId;\n      this.openDialog();\n    })\n  }\n\n  openDialog(): void {\n    \n      let dialogRef = this.dialog.open(ClaimDialogComponent, {\n        width: '400px',\n        data: { claimsId: this.str }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        console.log('The dialog was closed');\n      });\n\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "*{\n    margin:0;\n}\n.banner {\n\t\n    height: 89.7vh;\n\tbackground:url(src\\assets\\images\\wave.png);\n\tbackground-color: white;\n\tbackground-size: contain;\n    background-position: left;\n    background-repeat: no-repeat;\n\tcolor:\t#414a4c;\n    align-items: center;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.center-card{\n    width: 97%;\n    text-align: center;\n    color: rgba(0, 0, 0, 0.548);\n}\n.example-card {\n    max-width: min-content;\n    display: block;\n    text-align: center;\n}\n.btn-right{\n    display: flex;\n    direction: rtl;\n}\n.form-card{\n    width: 50%;\n    background-color:#f7f7f7;\n}\n.example-container {\n    display: flex;\n    flex-direction: column;\n  }\n  \n.example-container > * {\nwidth: 100%;\n}",
                    "styleUrl": "./submit-claim.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "memberService",
                        "type": "MemberService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "memberService",
                        "type": "MemberService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"banner\">\n    <mat-card class=\"center-card\">\n        <h2>Submit your Claim Details</h2>\n    </mat-card>\n    <br>\n    <mat-card class=\"form-card\">\n            <div class=\"example-container\">\n                <mat-form-field>\n                    <input matInput placeholder=\"Enter the Member Id\" [(ngModel)] =\"memberSubmitClaim.memberId\" required>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput placeholder=\"Enter the Policy Id\" [(ngModel)] =\"memberSubmitClaim.policyId\" required>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput placeholder=\"Enter the Hospital Id\" [(ngModel)] =\"memberSubmitClaim.hospitalId\" required>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput placeholder=\"Enter the Bill Amount\" [(ngModel)] =\"memberSubmitClaim.totalBill\" required>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput placeholder=\"Enter the Claim Amount\" [(ngModel)] =\"memberSubmitClaim.totalClaimedAmt\" required>\n                </mat-form-field>\n            </div>\n            <div>\n                <span  class=\"btn-right\"> \n                    <button class=\"mat-raised-button mat-accent text-white\" (click)=\"submitMemberClaim()\">Submit</button>\n                    <button class=\"mat-raised-button mat-light text-white\" routerLink=\"/memberHome\" style=\"margin-right: 14px;\">Back</button>\n                    <span *ngIf=\"hasError\" style=\"size: 4px; color: red; display: inline; margin-right: 59%;\">fill all the fields *</span>\n                </span>\n            </div>\n    </mat-card>\n</section>"
        },
        {
            "name": "ViewBillDetailsComponent",
            "id": "component-ViewBillDetailsComponent-130b967ac8f1fa1f235a0239b12c4ac7",
            "file": "src/app/component/view-bill-details/view-bill-details.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-view-bill-details",
            "styleUrls": [
                "./view-bill-details.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./view-bill-details.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "billDetail",
                    "defaultValue": "{\n    memberId:null,\n    policyId:null\n\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BillDetail",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "hasError",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "result",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BillDetailResult[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submitBillDetail",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MemberService } from 'src/app/service/member.service';\nimport { BillDetail } from './../../model/bill-detail';\nimport { BillDetailResult } from './../../model/bill-detail-result';\n\n@Component({\n  selector: 'app-view-bill-details',\n  templateUrl: './view-bill-details.component.html',\n  styleUrls: ['./view-bill-details.component.scss']\n})\nexport class ViewBillDetailsComponent implements OnInit {\n  billDetail:BillDetail={\n    memberId:null,\n    policyId:null\n\n  }\n  result:BillDetailResult[]=null;\n  hasError:boolean=false;\n  message:string|null;\n  constructor(private memberService: MemberService, private router: Router) { }\n\n  ngOnInit() {\n  }\n  submitBillDetail(): void {\n    if(this.billDetail.memberId==null || this.billDetail.policyId==null){\n        this.hasError=true;\n        this.message = \"fill all the fields *\";\n        return;\n      }\n      else{\n        this.hasError=false;\n      }\n    this.memberService.getBillDetails(this.billDetail).subscribe(response => {\n      let res:BillDetailResult[]=response;\n      this.router.navigateByUrl('/viewbilldetailsresult', { state: {data :res} } );\n    },error=>{\n      this.message=error.error.message;\n      this.hasError=true;\n    })\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "*{\n    margin:0;\n}\n.banner {\n    height: 89.7vh;\n\tbackground:url(src\\assets\\images\\wave.png);\n\tbackground-color: white;\n\tbackground-size: contain;\n    background-position: left;\n    background-repeat: no-repeat;\n\tcolor:\t#414a4c;\n    align-items: center;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.center-card{\n    width: 97%;\n    text-align: center;\n    color: rgba(0, 0, 0, 0.548);\n}\n.example-card {\n    max-width: min-content;\n    display: block;\n    text-align: center;\n}\n.btn-right{\n    float: right;\n}\n.form-card{\n    width: 50%;\n    background-color:#f7f7f7;\n}\n.example-container {\n    display: flex;\n    flex-direction: column;\n  }\n  \n.example-container > * {\nwidth: 100%;\n}",
                    "styleUrl": "./view-bill-details.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "memberService",
                        "type": "MemberService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "memberService",
                        "type": "MemberService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"banner\">\n    <mat-card class=\"center-card\">\n        <h2>Submit your Bill Details</h2>\n    </mat-card>\n    <br>\n    <mat-card class=\"form-card\">\n            <div class=\"example-container\">\n                <mat-form-field>\n                    <input matInput placeholder=\"Enter the Member Id\" [(ngModel)] =\"billDetail.memberId\" required>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput placeholder=\"Enter the Policy Id\" [(ngModel)] =\"billDetail.policyId\" required>\n                </mat-form-field>\n            </div>\n            <div>\n                <span> \n                    <span *ngIf=\"hasError\" style=\"size: 3px; color: red; display: inline; margin-right: 56%; text-transform: lowercase\">{{ message }}</span>\n                    <button class=\"mat-raised-button mat-accent text-white btn-right\" (click)=\"submitBillDetail()\">Submit</button>\n                    <button class=\"mat-raised-button mat-light text-white btn-right\" routerLink=\"/memberHome\" style=\"margin-right: 14px;\">Back</button>\n                </span>\n            </div>\n    </mat-card>\n</section>"
        },
        {
            "name": "ViewBillDetailsResultComponent",
            "id": "component-ViewBillDetailsResultComponent-82448cd3ef9663adcdb7e686101f57d3",
            "file": "src/app/component/view-bill-details-result/view-bill-details-result.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-view-bill-details-result",
            "styleUrls": [
                "./view-bill-details-result.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./view-bill-details-result.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTableDataSource<BillDetailResult>",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['memberid','policyid', 'lastdate','lastdue','lastpay', 'duedate']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "result",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BillDetailResult[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\nimport { BillDetailResult } from './../../model/bill-detail-result';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-view-bill-details-result',\n  templateUrl: './view-bill-details-result.component.html',\n  styleUrls: ['./view-bill-details-result.component.scss']\n})\nexport class ViewBillDetailsResultComponent implements OnInit {\n\n  public displayedColumns = ['memberid','policyid', 'lastdate','lastdue','lastpay', 'duedate'];\n  result:BillDetailResult[]=[];\n  dataSource:MatTableDataSource<BillDetailResult>;\n  constructor(){}\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<BillDetailResult>(history.state.data);\n  }\n  \n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".mat-table {\n    overflow: auto;\n    max-height: 400px;\n}\n  p {\n    font-family: Lato;\n  }\n\n*{\n    margin:0;\n}\n.banner {\n\t\n    height: 89.7vh;\n\tbackground:url(src\\assets\\images\\wave.png);\n\tbackground-color: white;\n\tbackground-size: contain;\n    background-position: left;\n    background-repeat: no-repeat;\n\tcolor:\t#414a4c;\n    align-items: center;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.center-card{\n    width: 97%;\n    text-align: center;\n    color: rgba(0, 0, 0, 0.548);\n}\n.example-card {\n    min-width: min-content;\n    display: block;\n    text-align: center;\n}\n.btn-right{\n    display: flex;\n    direction: rtl;\n}\n.form-card{\n    width: 50%;\n    background-color:#f7f7f7;\n}\n.example-container {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 25px;\n  }\n  \n.example-container > * {\n    width: 100%;\n}",
                    "styleUrl": "./view-bill-details-result.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"banner\">\n    <mat-card class=\"center-card\">\n        <h2>Your Bill Detail</h2>\n    </mat-card>\n    <br>\n    <mat-card class=\"form-card\">\n            <div class=\"example-container mat-elevation-z2\">\n                <table mat-table #table [dataSource]=\"dataSource\">\n                    <ng-container matColumnDef=\"memberid\">\n                        <th mat-header-cell *matHeaderCellDef> MEMBER ID </th>\n                        <td mat-cell *matCellDef=\"let billDetail\"> {{billDetail.memberId}} </td>\n                    </ng-container>\n            \n                    <ng-container matColumnDef=\"policyid\">\n                        <th mat-header-cell *matHeaderCellDef> POLICY ID </th>\n                        <td mat-cell *matCellDef=\"let billDetail\"> {{billDetail.policyId}} </td>\n                    </ng-container>\n            \n                    <ng-container matColumnDef=\"lastdate\">\n                        <th mat-header-cell *matHeaderCellDef> LAST PREMIUM DATE </th>\n                        <td mat-cell *matCellDef=\"let billDetail\"> {{billDetail.lastPremiumDate | date:'dd-MM-yyyy'}} </td>\n                    </ng-container>\n            \n                    <ng-container matColumnDef=\"lastdue\">\n                        <th mat-header-cell *matHeaderCellDef> PREMIUM AMOUNT DUE </th>\n                        <td mat-cell *matCellDef=\"let billDetail\"> {{billDetail.premiumAmtDue}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"lastpay\">\n                        <th mat-header-cell *matHeaderCellDef> LAST PAYMENT INFO </th>\n                        <td mat-cell *matCellDef=\"let billDetail\"> {{billDetail.lastPaymentInfo}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"duedate\">\n                        <th mat-header-cell *matHeaderCellDef> DUE DATE </th>\n                        <td mat-cell *matCellDef=\"let billDetail\"> {{billDetail.dueDate | date:'dd-MM-yyyy'}} </td>\n                    </ng-container>\n            \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                </table>\n            </div>\n            <div>\n                <span  class=\"btn-right\"> \n                    <button class=\"mat-raised-button mat-accent text-white\" routerLink=\"/memberHome\">Member Portal</button>\n                    <button class=\"mat-raised-button mat-light text-white\" routerLink=\"/viewbilldetails\" style=\"margin-right: 14px;\">Back</button>\n                </span>\n            </div>\n    </mat-card>\n</section>"
        },
        {
            "name": "ViewClaimStatusComponent",
            "id": "component-ViewClaimStatusComponent-2f172fd1fa055645c85b381f37f8fee3",
            "file": "src/app/component/view-claim-status/view-claim-status.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-view-claim-status",
            "styleUrls": [
                "./view-claim-status.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./view-claim-status.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hasError",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "memberSubmitClaim",
                    "defaultValue": "{\n    claimsId: null,\n    memberId: null,\n    policyId: null,\n    hospitalId: null,\n    totalClaimedAmt: null,\n    totalBill: null\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MemberSubmitClaim",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submitMemberClaimDetail",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MemberSubmitClaim } from 'src/app/model/member-submit-claim';\nimport { MemberService } from 'src/app/service/member.service';\nimport { ClaimStatusResult } from './../../model/claim-status-result';\n\n@Component({\n  selector: 'app-view-claim-status',\n  templateUrl: './view-claim-status.component.html',\n  styleUrls: ['./view-claim-status.component.scss']\n})\nexport class ViewClaimStatusComponent implements OnInit {\n  memberSubmitClaim: MemberSubmitClaim = {\n    claimsId: null,\n    memberId: null,\n    policyId: null,\n    hospitalId: null,\n    totalClaimedAmt: null,\n    totalBill: null\n  };\n  message:string|null;\n  hasError:boolean=false;\n  constructor(private memberService: MemberService, private router: Router) { }\n\n  ngOnInit() {\n  }\n  submitMemberClaimDetail(): void {\n    if(this.memberSubmitClaim.memberId==null || this.memberSubmitClaim.policyId==null ||\n      this.memberSubmitClaim.claimsId==null){\n        this.message = \"fill all the fields *\";\n        this.hasError=true;\n        return;\n      }\n      else{\n        this.hasError=false;\n      }\n    this.memberService.getClaimStatus(this.memberSubmitClaim).subscribe(data => {\n      let result:ClaimStatusResult={\n        claimId:data.claimId,\n        memberId:data.memberId,\n        claimStatus:data.claimStatus,\n        claimDesc:data.claimDesc\n      };\n      this.router.navigateByUrl('/viewclaimstatusresult', { state: {data :result } } );\n    },error=>{\n      this.message=error.error.message;\n      this.hasError=true;\n    })\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "*{\n    margin:0;\n}\n.banner {\n    height: 89.7vh;\n\tbackground:url(src\\assets\\images\\wave.png);\n\tbackground-color: white;\n\tbackground-size: contain;\n    background-position: left;\n    background-repeat: no-repeat;\n\tcolor:\t#414a4c;\n    align-items: center;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.center-card{\n    width: 97%;\n    text-align: center;\n    color: rgba(0, 0, 0, 0.548);\n}\n.example-card {\n    max-width: min-content;\n    display: block;\n    text-align: center;\n}\n.btn-right{\n    float: right;\n}\n.form-card{\n    width: 50%;\n    background-color:#f7f7f7;\n}\n.example-container {\n    display: flex;\n    flex-direction: column;\n  }\n  \n.example-container > * {\nwidth: 100%;\n}",
                    "styleUrl": "./view-claim-status.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "memberService",
                        "type": "MemberService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "memberService",
                        "type": "MemberService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"banner\">\n    <mat-card class=\"center-card\">\n        <h2>Submit your Claim Details</h2>\n    </mat-card>\n    <br>\n    <mat-card class=\"form-card\">\n            <div class=\"example-container\">\n                <mat-form-field>\n                    <input matInput placeholder=\"Enter the Claim Id\" [(ngModel)] =\"memberSubmitClaim.claimsId\" required>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput placeholder=\"Enter the Member Id\" [(ngModel)] =\"memberSubmitClaim.memberId\" required>\n                </mat-form-field>\n                <mat-form-field>\n                    <input matInput placeholder=\"Enter the Policy Id\" [(ngModel)] =\"memberSubmitClaim.policyId\" required>\n                </mat-form-field>\n            </div>\n            <div>\n                <span> \n                    <span *ngIf=\"hasError\" style=\"font-size: 14px; color: red; display: inline; margin-right: 56%; text-transform: capitalize\">{{ message }} *</span>\n                    <button class=\"mat-raised-button mat-accent text-white btn-right\" (click)=\"submitMemberClaimDetail()\">Submit</button>\n                    <button class=\"mat-raised-button mat-light text-white btn-right\" routerLink=\"/memberHome\" style=\"margin-right: 14px;\">Back</button>\n                </span>\n            </div>\n    </mat-card>\n</section>"
        },
        {
            "name": "ViewClaimStatusResultComponent",
            "id": "component-ViewClaimStatusResultComponent-9a8d7ebfeef2efda8529f0d99422a18f",
            "file": "src/app/component/view-claim-status-result/view-claim-status-result.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-view-claim-status-result",
            "styleUrls": [
                "./view-claim-status-result.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./view-claim-status-result.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTableDataSource<ClaimStatusResult>(this.result)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['claimid', 'memberid', 'claimstatus', 'claimdesc']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "result",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ClaimStatusResult[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ClaimStatusResult } from './../../model/claim-status-result';\nimport { Location } from '@angular/common';\nimport { MatTableDataSource } from '@angular/material';\n\n@Component({\n  selector: 'app-view-claim-status-result',\n  templateUrl: './view-claim-status-result.component.html',\n  styleUrls: ['./view-claim-status-result.component.scss']\n})\nexport class ViewClaimStatusResultComponent implements OnInit {\n  \n  public displayedColumns = ['claimid', 'memberid', 'claimstatus', 'claimdesc'];\n  result:ClaimStatusResult[]=[];\n  dataSource = new MatTableDataSource<ClaimStatusResult>(this.result);\n  constructor(){}\n\n  ngOnInit() {\n    this.result.push(history.state.data);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".mat-table {\n    overflow: auto;\n    max-height: 300px;\n}\n  p {\n    font-family: Lato;\n  }\n\n*{\n    margin:0;\n}\n.banner {\n\t\n    height: 89.7vh;\n\tbackground:url(src\\assets\\images\\wave.png);\n\tbackground-color: white;\n\tbackground-size: contain;\n    background-position: left;\n    background-repeat: no-repeat;\n\tcolor:\t#414a4c;\n    align-items: center;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.center-card{\n    width: 97%;\n    text-align: center;\n    color: rgba(0, 0, 0, 0.548);\n}\n.example-card {\n    max-width: min-content;\n    display: block;\n    text-align: center;\n}\n.btn-right{\n    display: flex;\n    direction: rtl;\n}\n.form-card{\n    width: 50%;\n    background-color:#f7f7f7;\n}\n.example-container {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 25px;\n  }\n  \n.example-container > * {\n    width: 100%;\n}",
                    "styleUrl": "./view-claim-status-result.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"banner\">\n    <mat-card class=\"center-card\">\n        <h2>Your Claim Status</h2>\n    </mat-card>\n    <br>\n    <mat-card class=\"form-card\">\n            <div class=\"example-container mat-elevation-z2\">\n                <table mat-table #table [dataSource]=\"dataSource\">\n                    <ng-container matColumnDef=\"claimid\">\n                        <th mat-header-cell *matHeaderCellDef> CLAIM ID </th>\n                        <td mat-cell *matCellDef=\"let claimStatus\"> {{claimStatus.claimId}} </td>\n                    </ng-container>\n            \n                    <ng-container matColumnDef=\"memberid\">\n                        <th mat-header-cell *matHeaderCellDef> MEMBER ID </th>\n                        <td mat-cell *matCellDef=\"let claimStatus\"> {{claimStatus.memberId}} </td>\n                    </ng-container>\n            \n                    <ng-container matColumnDef=\"claimstatus\">\n                        <th mat-header-cell *matHeaderCellDef> CLAIM STATUS </th>\n                        <td mat-cell *matCellDef=\"let claimStatus\"> {{claimStatus.claimStatus}} </td>\n                    </ng-container>\n            \n                    <ng-container matColumnDef=\"claimdesc\">\n                        <th mat-header-cell *matHeaderCellDef> STATUS DESC </th>\n                        <td mat-cell *matCellDef=\"let claimStatus\"> {{claimStatus.claimDesc}} </td>\n                    </ng-container>\n            \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                </table>\n            </div>\n            <div>\n                <span  class=\"btn-right\"> \n                    <button class=\"mat-raised-button mat-accent text-white\" routerLink=\"/memberHome\">Member Portal</button>\n                    <button class=\"mat-raised-button mat-light text-white\" routerLink=\"/viewclaimstatus\" style=\"margin-right: 14px;\">Back</button>\n                </span>\n            </div>\n    </mat-card>\n</section>"
        }
    ],
    "modules": [
        {
            "name": "AngularMaterialModule",
            "id": "module-AngularMaterialModule-7eac90535c73d4d6d8158f88e34e2d41",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/angular-material.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  MatCardModule,\n  MatDialogModule,\n  MatMenuModule,\n   MatButtonModule,\n   MatToolbarModule,\n   MatIconModule,\n   MatBadgeModule,\n   MatSidenavModule,\n   MatListModule,\n   MatGridListModule,\n   MatFormFieldModule,\n   MatInputModule,\n   MatSelectModule,\n   MatRadioModule,\n   MatDatepickerModule,\n   MatNativeDateModule,\n   MatChipsModule,\n   MatTooltipModule,\n   MatTableModule,\n   MatPaginatorModule,\n   MatProgressSpinnerModule\n} from '@angular/material';\n\n@NgModule({\n   imports: [\n    MatCardModule, \n    MatDialogModule, \n    MatMenuModule,\n    MatProgressSpinnerModule,\n      CommonModule,\n      MatButtonModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatSidenavModule,\n      MatBadgeModule,\n      MatListModule,\n      MatGridListModule,\n      MatFormFieldModule,\n      MatInputModule,\n      MatSelectModule,\n      MatRadioModule,\n      MatDatepickerModule,\n      MatNativeDateModule,\n      MatChipsModule,\n      MatTooltipModule,\n      MatTableModule,\n      MatPaginatorModule\n   ],\n   exports: [\n    MatCardModule, \n    MatDialogModule, \n    MatMenuModule,\n    MatProgressSpinnerModule,\n      MatButtonModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatSidenavModule,\n      MatBadgeModule,\n      MatListModule,\n      MatGridListModule,\n      MatInputModule,\n      MatFormFieldModule,\n      MatSelectModule,\n      MatRadioModule,\n      MatDatepickerModule,\n      MatChipsModule,\n      MatTooltipModule,\n      MatTableModule,\n      MatPaginatorModule\n   ],\n   providers: [\n      MatDatepickerModule,\n   ]\n})\n\nexport class AngularMaterialModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-a604a0018ffa22f88bead1649f71352c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AddEmployeeComponent } from './add-employee/add-employee.component';\nimport { FormsModule } from '@angular/forms';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BasicAuthHtppInterceptorService } from './service/basic-auth-interceptor.service';\nimport { HomeComponent } from './component/home/home.component';\nimport { MemberHomeComponent } from './component/member-home/member-home.component';\nimport { SubmitClaimComponent } from './component/submit-claim/submit-claim.component';\nimport { ViewClaimStatusComponent } from './component/view-claim-status/view-claim-status.component';\nimport { ViewBillDetailsComponent } from './component/view-bill-details/view-bill-details.component';\nimport { PolicyProviderDetailsComponent } from './component/policy-provider-details/policy-provider-details.component';\nimport { ClaimDialogComponent } from './component/submit-claim/claim-dialog/claim-dialog.component';\nimport { ViewClaimStatusResultComponent } from './component/view-claim-status-result/view-claim-status-result.component';\nimport { ViewBillDetailsResultComponent } from './component/view-bill-details-result/view-bill-details-result.component';\nimport { AboutPageComponent } from './component/about-page/about-page.component';\nimport { PolicyProviderDetailsResultComponent } from './component/policy-provider-details-result/policy-provider-details-result.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeComponent,\n    AddEmployeeComponent,\n    HeaderComponent,\n    HomeComponent,\n    FooterComponent,\n    LoginComponent,\n    LogoutComponent,\n    MemberHomeComponent,\n    SubmitClaimComponent,\n    ViewClaimStatusComponent,\n    ViewBillDetailsComponent,\n    PolicyProviderDetailsComponent,\n    PolicyProviderDetailsResultComponent,\n    ClaimDialogComponent,\n    ViewClaimStatusResultComponent,\n    ViewBillDetailsResultComponent,\n    AboutPageComponent\n  ],\n  imports: [\n\n\n  BrowserModule,\n    AngularMaterialModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [ { provide: HTTP_INTERCEPTORS, useClass: BasicAuthHtppInterceptorService, multi: true }],\n  bootstrap: [AppComponent],\n  entryComponents :[ClaimDialogComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "BasicAuthHtppInterceptorService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AboutPageComponent"
                        },
                        {
                            "name": "AddEmployeeComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ClaimDialogComponent"
                        },
                        {
                            "name": "EmployeeComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "LogoutComponent"
                        },
                        {
                            "name": "MemberHomeComponent"
                        },
                        {
                            "name": "PolicyProviderDetailsComponent"
                        },
                        {
                            "name": "PolicyProviderDetailsResultComponent"
                        },
                        {
                            "name": "SubmitClaimComponent"
                        },
                        {
                            "name": "ViewBillDetailsComponent"
                        },
                        {
                            "name": "ViewBillDetailsResultComponent"
                        },
                        {
                            "name": "ViewClaimStatusComponent"
                        },
                        {
                            "name": "ViewClaimStatusResultComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        },
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-b4cea3abbd041fcc5cadd89225752b57",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { AuthGaurdService } from './service/auth-gaurd.service';\nimport { HomeComponent } from './component/home/home.component';\nimport { MemberHomeComponent } from './component/member-home/member-home.component';\nimport { SubmitClaimComponent } from './component/submit-claim/submit-claim.component';\nimport { ViewClaimStatusComponent } from './component/view-claim-status/view-claim-status.component';\nimport { ViewBillDetailsComponent } from './component/view-bill-details/view-bill-details.component';\nimport { PolicyProviderDetailsComponent } from './component/policy-provider-details/policy-provider-details.component';\nimport { ViewClaimStatusResultComponent } from './component/view-claim-status-result/view-claim-status-result.component';\nimport { ViewBillDetailsResultComponent } from './component/view-bill-details-result/view-bill-details-result.component';\nimport { AboutPageComponent } from './component/about-page/about-page.component';\nimport { PolicyProviderDetailsResultComponent } from './component/policy-provider-details-result/policy-provider-details-result.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent,canActivate:[AuthGaurdService] },\n  { path: 'home', component: HomeComponent,canActivate:[AuthGaurdService] },\n  { path: 'memberHome', component: MemberHomeComponent,canActivate:[AuthGaurdService]},\n  { path: 'login', component: LoginComponent },\n  { path: 'aboutus', component: AboutPageComponent },\n  { path: 'logout', component: LogoutComponent,canActivate:[AuthGaurdService] },\n  { path: 'submitclaim', component: SubmitClaimComponent,canActivate:[AuthGaurdService] },\n  { path: 'viewclaimstatus', component: ViewClaimStatusComponent,canActivate:[AuthGaurdService] },\n  { path: 'viewclaimstatusresult', component: ViewClaimStatusResultComponent,canActivate:[AuthGaurdService] },\n  { path: 'viewbilldetails', component: ViewBillDetailsComponent,canActivate:[AuthGaurdService] },\n  { path: 'viewbilldetailsresult', component: ViewBillDetailsResultComponent,canActivate:[AuthGaurdService] },\n  { path: 'policyproviderdetails', component: PolicyProviderDetailsComponent,canActivate:[AuthGaurdService] },\n  { path: 'policyproviderdetailsresult', component: PolicyProviderDetailsResultComponent,canActivate:[AuthGaurdService] }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\nexports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ClaimDialogModule",
            "id": "module-ClaimDialogModule-06b5012ef585757ccb448243f427df32",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/component/submit-claim/claim-dialog/claim-dialog.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClaimDialogComponent } from './claim-dialog.component';\nimport { FormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatCommonModule,\n  MatDialogModule,\n  MatFormFieldModule,\n  MatInputModule,\n} from '@angular/material';\n\n@NgModule({\n  declarations: [ClaimDialogComponent],\n  entryComponents:[ClaimDialogComponent],\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatButtonModule,\n    MatCommonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n  ]\n})\nexport class ClaimDialogModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ClaimDialogComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "HomeComponent",
                        "canActivate": [
                            "AuthGaurdService"
                        ]
                    },
                    {
                        "path": "home",
                        "component": "HomeComponent",
                        "canActivate": [
                            "AuthGaurdService"
                        ]
                    },
                    {
                        "path": "memberHome",
                        "component": "MemberHomeComponent",
                        "canActivate": [
                            "AuthGaurdService"
                        ]
                    },
                    {
                        "path": "login",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "aboutus",
                        "component": "AboutPageComponent"
                    },
                    {
                        "path": "logout",
                        "component": "LogoutComponent",
                        "canActivate": [
                            "AuthGaurdService"
                        ]
                    },
                    {
                        "path": "submitclaim",
                        "component": "SubmitClaimComponent",
                        "canActivate": [
                            "AuthGaurdService"
                        ]
                    },
                    {
                        "path": "viewclaimstatus",
                        "component": "ViewClaimStatusComponent",
                        "canActivate": [
                            "AuthGaurdService"
                        ]
                    },
                    {
                        "path": "viewclaimstatusresult",
                        "component": "ViewClaimStatusResultComponent",
                        "canActivate": [
                            "AuthGaurdService"
                        ]
                    },
                    {
                        "path": "viewbilldetails",
                        "component": "ViewBillDetailsComponent",
                        "canActivate": [
                            "AuthGaurdService"
                        ]
                    },
                    {
                        "path": "viewbilldetailsresult",
                        "component": "ViewBillDetailsResultComponent",
                        "canActivate": [
                            "AuthGaurdService"
                        ]
                    },
                    {
                        "path": "policyproviderdetails",
                        "component": "PolicyProviderDetailsComponent",
                        "canActivate": [
                            "AuthGaurdService"
                        ]
                    },
                    {
                        "path": "policyproviderdetailsresult",
                        "component": "PolicyProviderDetailsResultComponent",
                        "canActivate": [
                            "AuthGaurdService"
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/add-employee/add-employee.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddEmployeeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/component/about-page/about-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/component/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/component/member-home/member-home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MemberHomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/component/policy-provider-details-result/policy-provider-details-result.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PolicyProviderDetailsResultComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/component/policy-provider-details/policy-provider-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PolicyProviderDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/component/submit-claim/claim-dialog/claim-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ClaimDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/component/submit-claim/submit-claim.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SubmitClaimComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/component/view-bill-details-result/view-bill-details-result.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ViewBillDetailsResultComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/component/view-bill-details/view-bill-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ViewBillDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/component/view-claim-status-result/view-claim-status-result.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ViewClaimStatusResultComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/component/view-claim-status/view-claim-status.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ViewClaimStatusComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/employee/employee.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmployeeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/logout/logout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LogoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/model/bill-detail-result.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BillDetailResult",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/model/bill-detail.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BillDetail",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/model/claim-status-result.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ClaimStatusResult",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/model/claim-status.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ClaimStatus",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/model/member-submit-claim.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MemberSubmitClaim",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/model/policy-result.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PolicyResult",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/model/user-login-credential.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UserLoginCredential",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/service/auth-gaurd.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGaurdService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/service/authentication.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/service/authentication.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthenticationService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/service/basic-auth-interceptor.service.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "BasicAuthHtppInterceptorService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/service/httpclient.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Employee",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/service/httpclient.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HttpClientService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/service/member.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MemberService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}